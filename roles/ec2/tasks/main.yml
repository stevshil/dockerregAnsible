- name: Create Instance
  ec2:
    key_name: "{{ keypair }}"
    instance_type: "t2.micro"
    image: "{{ ami[region] }}"
    assign_public_ip: yes
    wait: yes
    region: "{{ region }}"
    vpc_subnet_id: "{{ subnet[region] }}"
    instance_tags: "{{ mytags }}"
  when: groups['VMS'] | length == 0
  register: vms

- name: VM output
  debug:
    msg: "{{vms}}"

- name: Wait for SSH on all VMs
  delegate_to: "{{ item.dns_name }}"
  remote_user: ec2-user
  wait_for_connection:
    delay: 30
    timeout: 300
  with_items: "{{ vms.instances }}"
  when: groups['VMS'] | length == 0

- name: Add Controller to inventory
  lineinfile:
    dest: "{{ playbook_dir }}/environment/hosts"
    insertafter: '^\[controller\]'
    line: "{{ item.public_ip }} instance_id={{ item.id }} private_ip={{ item.private_ip }} systemname=dockerreg"
  with_items: "{{ vms.instances }}"
  when: groups['VMS'] | length == 0

- name: Refresh Controller inventory
  meta: refresh_inventory

- name: Add DockerReg DNS entry
  route53:
    state: present
    zone: "{{ dnszone }}"
    record: "dockerreg.{{ dnszone }}"
    type: A
    ttl: 60
    value:
      - "{{ groups['VMS'][0] }}"
    overwrite: yes
